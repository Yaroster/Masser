<?php	class Category	{		private $Page;				private $Id;				private $Parent;				private $Name;				private $Order;				private $Accept;				private $Ranks;				private $Description;				private $Childs;				private $Subjects;				private $Last;				public function __construct($Page, $Id)		{			$this->Page = $Page;						$Query = mysql_query("SELECT * FROM f_categories WHERE id = $Id");						if (!mysql_num_rows($Query))			{				return;			}						$Values = mysql_fetch_assoc($Query);						foreach ($Values as $Key => $Value)			{				$Key = ucfirst($Key);								$this->$Key = $Value;			}						$this->Description = $this->Page->GetLanguage()->GetText('forums.' . $this->Name . '.description');						if ($this->Description == 'forums.' . $this->Name . '.description')			{				$this->Description = '';			}						$this->Name = $Page->GetLanguage()->GetText('forums.' . $this->Name . '.name');						$this->Ranks = explode('#', $this->Ranks);						$this->Childs = array();						$Query = mysql_query("SELECT id FROM f_categories WHERE parent = {$this->Id}");						if (mysql_num_rows($Query))			{				while ($Values = mysql_fetch_assoc($Query))				{					array_push($this->Childs, $Values['id']);				}			}						$this->Subjects = array();						$Query = mysql_query("SELECT id FROM f_subjects WHERE category = {$this->Id} ORDER BY action DESC");						if (mysql_num_rows($Query))			{				while ($Values = mysql_fetch_assoc($Query))				{					array_push($this->Subjects, $Values['id']);				}			}						if (count($this->Subjects) > 0)			{				$Page->GetFunctions()->Load('subject');								$this->Last = new Subject($this->Page, $this->Subjects[0]);			}		}				public function GetId()		{			return $this->Id;		}				public function GetParent()		{			return $this->Parent;		}				public function GetName()		{			return $this->Name;		}				public function GetAccept()		{			return $this->Accept;		}				public function GetRanks()		{			return $this->Ranks;		}				public function CanAccess($Player)		{			//quand accept == true, on accepte seulement ceux qui sont sur la liste						if ($this->Accept)			{				return in_array($Player->GetGrad()->Get('id'), $this->Ranks);			}						return !in_array($Player->GetGrad()->Get('id'), $this->Ranks);		}				public function GetLink()		{			return 'category.php?id=' . $this->Id;		}				public function GetDescription()		{			return $this->Description;		}				public function LoadChilds()		{			$New = array();						$this->Page->GetFunctions()->Load('category');						foreach ($this->Childs as $Id)			{				array_push($New, new Category($this->Page, $Id));			}						$this->Childs = $New;		}				public function LoadSubjects()		{			$New = array();						$this->Page->GetFunctions()->Load('subject');						foreach ($this->Subjects as $Id)			{				array_push($New, new Subject($this->Page, $Id));			}						$this->Subjects = $New;		}				public function GetChilds()		{			return $this->Childs;		}				public function GetSubjects()		{			return $this->Subjects;		}				public function Display()		{			$this->LoadSubjects();						$this->Page->GetFunctions()->Load('player');						echo '<table class="forums" cellspacing="0" cellpadding="4">';						echo '<tr>';						echo '<th align="left" width="50%">';						if ($this->Page->IsConnected() && $this->CanAccess($this->Page->GetPlayer()))			{				echo '<a href="create.php?id=' . $this->Id . '"><img src="includes/images/add.png" height="18px" style="vertical-align: middle;"/></a> ';			}			echo $this->Page->GetLanguage()->GetText('pages.category.table.name');						echo '</th>';						echo '<th width="15%">';						echo $this->Page->GetLanguage()->GetText('pages.category.table.views');						echo '</th>';						echo '<th width="10%">';						echo $this->Page->GetLanguage()->GetText('pages.category.table.messages');						echo '</th>';						echo '<th align="right" width="25%">';						echo $this->Page->GetLanguage()->GetText('pages.category.table.last');						echo '</th>';						echo '</tr>';						foreach ($this->Subjects as $Subject)			{				echo '<tr>';								echo '<td valign="middle">';								echo '<div class="title">';								echo '<a href="' . $this->Page->Link($Subject->GetLink()) . '">' . $Subject->GetTitle() . '</a>';								$Poster = new Player($this->Page, $Subject->GetPoster());								echo ' <span class="subpos">' . $this->Page->GetLanguage()->GetText('pages.index.by') . ' <a href="' . $this->Page->Link($Poster->GetLink()) . '">' . $Poster->GetColored() . '</a></span>';								echo '</div>';								echo '</td>';								echo '<td valign="middle" align="center">';								echo $Subject->GetViews();								echo '</td>';								echo '<td valign="middle" align="center">';								echo count($Subject->GetElements());								echo '</td>';								echo '<td valign="middle" align="right">';								$Laster = new Player($this->Page, $Subject->GetLast()->GetPoster());								if ($Subject->GetLast() != null)				{					echo ' <span class="subpos">' . $this->Page->GetLanguage()->GetText('pages.index.by') . ' <a href="' . $this->Page->Link($Laster->GetLink()) . '">' . $Laster->GetColored() . '</a>, ';										echo utf8_encode(ucfirst(strftime("%A %d %B " . utf8_decode($this->Page->GetLanguage()->GetText('pages.index.at')). " %H:%M", strtotime($this->Page->DecaleDate($Subject->GetLast()->GetPosted())))));				}				else				{					echo ' <span class="subpos">' . $this->Page->GetLanguage()->GetText('category.nomessage') . '</span>';				}								echo '</span>';								echo '</td>';								echo '</tr>';			}						echo '</table>';		}				public function CountMessages()		{			$Count = 0;						if (count($this->Subjects) > 0)			{				if (is_numeric($this->Subjects[0]))				{					foreach ($this->Subjects as $Id)					{						$Query = mysql_query("SELECT id FROM f_messages WHERE subject = {$Id}");												if (!mysql_num_rows($Query))						{							continue;						}												$Count += mysql_num_rows($Query);					}				}				else				{					foreach ($this->Subjects as $Subject)					{						$Count += count($Subject->GetElements());					}				}			}						return $Count;		}				public function GetLast()		{			return $this->Last;		}	}?>